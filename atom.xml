<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yam</title>
  <icon>https://www.yam.gift/icon.png</icon>
  <subtitle>Feeling, Coding, Thinking</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.yam.gift/"/>
  <updated>2023-01-26T13:08:20.961Z</updated>
  <id>https://www.yam.gift/</id>
  
  <author>
    <name>Yam</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ChatGPT Prompt工程：设计、实践与思考</title>
    <link href="https://www.yam.gift/2023/01/25/NLP/2023-01-25-ChatGPT-Prompt-Engineering/"/>
    <id>https://www.yam.gift/2023/01/25/NLP/2023-01-25-ChatGPT-Prompt-Engineering/</id>
    <published>2023-01-25T15:30:00.000Z</published>
    <updated>2023-01-26T13:08:20.961Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;ChatGPT 火爆出圈了，有些人惊叹于它的能力，当然也有部分人觉得也就那样。这就不得不提 Prompt 了，据说【相关文献1】，ChatGPT 效果好不好完全取决于你的 Prompt，“看来 Propmt 也成一个技术活儿了”。当我这么想的时候，没想到国外居然已经有了成熟的售卖 Prompt 的&lt;a href=&quot;https://promptbase.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;网站&lt;/a&gt;，这玩意儿居然成了 NFT（Non-Fungible Token），真是世界变化太快，本人过于迟钝。&lt;/p&gt;
&lt;p&gt;其实，对于 ChatGPT 的能力，作为 NLPer 第一时间就领教过了，作为行业内人士，而且多年来一直关注文本生成领域，ChatGPT 带给我的冲击和震撼是非常大的，甚至那几天晚上连觉都睡不着，真是焦虑感爆棚。记得在 &lt;a href=&quot;https://www.datawhale.club/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;DataWhale&lt;/a&gt; 团队群里一次讨论 ChatGPT 时，我发过这样的消息，原话如下：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NLP真的考虑要转行了&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ChatGPT已经抹平了任务、行业、语言&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;以后也不用分那么多task榜单了，不用管行业&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;强大的一批，LM as SAAS 将统治一切&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;LM as SAAS，其实应该是 LMAS——Language Model as Service。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;过了几天看到这篇文章：&lt;a href=&quot;https://mp.weixin.qq.com/s/1HZoNBovqn1FNlxghDXMFg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ChatGPT 会对未来 5 年的 NLP 算法从业者带来怎样的冲击？&lt;/a&gt;发现业内大家也是差不多的想法（虽然我发消息在这篇文章之后，但之前的确没看过），尤其是张俊林博士的观点个人比较认同，NLP 工程师的确不容乐观。这里不是说这个职业的职责不容乐观，而是说整个行业可能会受到冲击。&lt;/p&gt;
&lt;p&gt;有点跑偏了，说回 Prompt，春节时就想用 ChatGPT 生成一些祝福语，突然发现自己掌握的 Prompt 出来的效果不太好了。Google 了一下结果就发现了 &lt;a href=&quot;https://fka.gumroad.com/l/art-of-chatgpt-prompting&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;The Art of ChatGPT Prompting: A Guide to Crafting Clear and Effective Prompts&lt;/a&gt; 这本电子书，再一搜，发现这个领域居然已经发展到如斯境地。本着学习的心态，阅读整理了一些 Prompt 工程的资料（见《文献和参考——核心文献》），是有此文。本文主要介绍关于 ChatGPT Prompt 的方法，我会结合这些资料加上自己的理解写出来，同时会在中文环境下做相关试验。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Thinking" scheme="https://www.yam.gift/categories/Thinking/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="Few-Shot" scheme="https://www.yam.gift/tags/Few-Shot/"/>
    
      <category term="Prompt" scheme="https://www.yam.gift/tags/Prompt/"/>
    
      <category term="Zero-Shot" scheme="https://www.yam.gift/tags/Zero-Shot/"/>
    
      <category term="In-Context Learning" scheme="https://www.yam.gift/tags/In-Context-Learning/"/>
    
      <category term="One-Shot" scheme="https://www.yam.gift/tags/One-Shot/"/>
    
      <category term="ChatGPT" scheme="https://www.yam.gift/tags/ChatGPT/"/>
    
      <category term="Instruct" scheme="https://www.yam.gift/tags/Instruct/"/>
    
  </entry>
  
  <entry>
    <title>Put Human in NLP Loop</title>
    <link href="https://www.yam.gift/2023/01/21/Paper/2023-01-21-Human-in-Loop/"/>
    <id>https://www.yam.gift/2023/01/21/Paper/2023-01-21-Human-in-Loop/</id>
    <published>2023-01-21T15:00:00.000Z</published>
    <updated>2023-01-23T04:49:57.303Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章基于一篇 Survey（见核心文献），就是如何将人类的反馈放在 NLP 过程中，这个过程可以是训练，也可以是部署后，也可以是数据标注阶段。总之，它泛指把人类的反馈与 NLP 过程结合。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Feeling" scheme="https://www.yam.gift/categories/Feeling/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="Human-in-Loop" scheme="https://www.yam.gift/tags/Human-in-Loop/"/>
    
      <category term="Human-in-the-Loop" scheme="https://www.yam.gift/tags/Human-in-the-Loop/"/>
    
  </entry>
  
  <entry>
    <title>人生随笔</title>
    <link href="https://www.yam.gift/2023/01/21/Diary/2023-01-21-Life/"/>
    <id>https://www.yam.gift/2023/01/21/Diary/2023-01-21-Life/</id>
    <published>2023-01-21T00:00:00.000Z</published>
    <updated>2023-01-25T05:13:51.480Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今天是除夕，一大早因为一个梦醒来了，不是噩梦，当然也不是美梦。要搁平时，肯定继续睡了，但上完厕所发现居然毫无睡意，而且很想写点什么。至于原因，好像也没什么原因，可能是近期一直想写点东西，也可能是马上又过完了一年，还有可能是年纪见长容易感慨。总之，好似有方向，但又无目的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Thinking" scheme="https://www.yam.gift/categories/Thinking/"/>
    
    
      <category term="Diary" scheme="https://www.yam.gift/tags/Diary/"/>
    
      <category term="Life" scheme="https://www.yam.gift/tags/Life/"/>
    
      <category term="Growth" scheme="https://www.yam.gift/tags/Growth/"/>
    
  </entry>
  
  <entry>
    <title>GPT3 和它的 In-Context Learning</title>
    <link href="https://www.yam.gift/2023/01/20/NLP/2023-01-20-GPT3/"/>
    <id>https://www.yam.gift/2023/01/20/NLP/2023-01-20-GPT3/</id>
    <published>2023-01-20T15:30:00.000Z</published>
    <updated>2023-01-21T02:06:39.501Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;ChatGPT 的爆火让很多 NLPer 大吃一惊，焦虑感爆棚，它的思路和方法都不复杂，但效果却出奇的好。我想任何研究成果的爆发都不可能是一蹴而就的，期间必然包含这一系列小的创新和优化。于是，重新把 GPT3 的 Paper 拉出来读了一遍，重点关注了实验结果之外的东西，果然发现不少细节。因此，本文还是以 GPT3 为主。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Thinking" scheme="https://www.yam.gift/categories/Thinking/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="Few-Shot" scheme="https://www.yam.gift/tags/Few-Shot/"/>
    
      <category term="Zero-Shot" scheme="https://www.yam.gift/tags/Zero-Shot/"/>
    
      <category term="GPT3" scheme="https://www.yam.gift/tags/GPT3/"/>
    
      <category term="In-Context Learning" scheme="https://www.yam.gift/tags/In-Context-Learning/"/>
    
      <category term="One-Shot" scheme="https://www.yam.gift/tags/One-Shot/"/>
    
  </entry>
  
  <entry>
    <title>IDE Memo</title>
    <link href="https://www.yam.gift/2022/11/15/Unix/2022-11-15-IDE/"/>
    <id>https://www.yam.gift/2022/11/15/Unix/2022-11-15-IDE/</id>
    <published>2022-11-15T15:00:00.000Z</published>
    <updated>2022-11-15T15:55:54.751Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;IDE 相关备忘。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Coding" scheme="https://www.yam.gift/categories/Coding/"/>
    
    
      <category term="IDE" scheme="https://www.yam.gift/tags/IDE/"/>
    
      <category term="vim" scheme="https://www.yam.gift/tags/vim/"/>
    
      <category term="emacs" scheme="https://www.yam.gift/tags/emacs/"/>
    
  </entry>
  
  <entry>
    <title>W2NER解读</title>
    <link href="https://www.yam.gift/2022/10/30/Paper/2022-10-30-W2NER-Study/"/>
    <id>https://www.yam.gift/2022/10/30/Paper/2022-10-30-W2NER-Study/</id>
    <published>2022-10-30T15:00:00.000Z</published>
    <updated>2022-10-30T02:34:57.505Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;NER 任务主要有三种类型：Flat（平铺）、overlapped（重叠或嵌套）、discontinuous（不连续），越来越多的研究致力于将它们统一起来。当前的 STOA 主要包括基于 Span 和 Seq2Seq 模型，不过它们很少关注边界，可能会导致后续的偏移。本文提出的统一方法（W2NER）是将其视为词词关系分类，为此引入两种词词关系：&lt;code&gt;NNW&lt;/code&gt;（&lt;code&gt;Next-Neighboring-Word&lt;/code&gt;）和 &lt;code&gt;THW-*&lt;/code&gt;（&lt;code&gt;Tail-Head-Word-*&lt;/code&gt;）。具体而言，构造一个 2D 的词词关系网格，然后使用多粒度 2D 卷积，以更好地细化网格表示。最后，使用一个共同预测器来推理词-词关系。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Feeling" scheme="https://www.yam.gift/categories/Feeling/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="NER" scheme="https://www.yam.gift/tags/NER/"/>
    
      <category term="W2NER" scheme="https://www.yam.gift/tags/W2NER/"/>
    
      <category term="NNW" scheme="https://www.yam.gift/tags/NNW/"/>
    
      <category term="THW" scheme="https://www.yam.gift/tags/THW/"/>
    
      <category term="Span" scheme="https://www.yam.gift/tags/Span/"/>
    
      <category term="BIO" scheme="https://www.yam.gift/tags/BIO/"/>
    
      <category term="BIOHD" scheme="https://www.yam.gift/tags/BIOHD/"/>
    
  </entry>
  
  <entry>
    <title>《麦肯锡战略化思维》读书笔记</title>
    <link href="https://www.yam.gift/2022/10/23/CogPsy/2022-10-23-Structured-Strategic-Thought/"/>
    <id>https://www.yam.gift/2022/10/23/CogPsy/2022-10-23-Structured-Strategic-Thought/</id>
    <published>2022-10-23T15:00:00.000Z</published>
    <updated>2022-10-31T12:10:54.905Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;很多职场人士会处于 PAID（Pressured，Action Addicted，Information Overload and Distracted，即压力、没时间思考、信息超载和无法专注）亚健康状态。理性思考、理性办事是我们应该有的习惯，但首先要走出心理上的舒适区和大脑快速思考的本能。本书介绍的结构化战略思维能让我们更加理性，对抗焦虑。前面部分是简化记录，后文是较详细记录。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四大原则&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数字说话（行为准则）&lt;/li&gt;
&lt;li&gt;洞见优于表象（行为准则）&lt;/li&gt;
&lt;li&gt;MECE 原则（方法论）&lt;/li&gt;
&lt;li&gt;假设为前提（方法论）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;结构化战略思维框架&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;战略思维定义正确的问题&lt;ul&gt;
&lt;li&gt;SMART 原则&lt;/li&gt;
&lt;li&gt;【六步】：背景、成功标准、边界、限制条件、责任人/相关人、资源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;结构化分析（原则13）&lt;ul&gt;
&lt;li&gt;3-3 原则四种【切】法：公式法、子目录列举法、流程法和逻辑框架法&lt;/li&gt;
&lt;li&gt;单维、多维【图谱】：产品 BCG、客户消费者感知图、项目优先级分析、品类拓展分析&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;头脑风暴提出假设（原则24）&lt;/li&gt;
&lt;li&gt;调研验证假设（原则12）&lt;/li&gt;
&lt;li&gt;交付沟通（原则1-4）&lt;ul&gt;
&lt;li&gt;【故事线】串联核心要素：Why 为什么、What 用什么、How 怎么解决、Why 为什么是你、HowMuch 投入产出&lt;/li&gt;
&lt;li&gt;【SCP-I 框架】描述行业现状：S（规则）描述行业整体商业模式、C（行为）描述主流商业模式和竞争策略、P（业绩）包括财务和非财务&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Feeling" scheme="https://www.yam.gift/categories/Feeling/"/>
    
    
      <category term="Thought" scheme="https://www.yam.gift/tags/Thought/"/>
    
      <category term="Strategic" scheme="https://www.yam.gift/tags/Strategic/"/>
    
  </entry>
  
  <entry>
    <title>Global Pointer：Novel Efficient Span-based Approach for NER</title>
    <link href="https://www.yam.gift/2022/10/16/Paper/2022-10-16-GlobalPointer/"/>
    <id>https://www.yam.gift/2022/10/16/Paper/2022-10-16-GlobalPointer/</id>
    <published>2022-10-16T15:00:00.000Z</published>
    <updated>2022-10-16T14:50:04.103Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Paper：&lt;a href=&quot;https://arxiv.org/abs/2208.03054&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[2208.03054] Global Pointer: Novel Efficient Span-based Approach for Named Entity Recognition&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Code：&lt;a href=&quot;https://github.com/bojone/bert4keras&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/bojone/bert4keras&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一句话概述：全局指针识别 NER，Span 预测得到 NER 类型。&lt;/p&gt;
&lt;p&gt;摘要：NER 任务是从一段文本中识别出预先定义的语义实体类型。SOTA 方案通常会因为捕获底层文本的细粒度语义信息而受到影响。基于 Span 的方法克服了这种缺陷，但性能是个问题。本文提出基于 Span 的 NER 框架——全局指针（GP），通过乘法注意力机制利用相对位置，目标是考虑开始和结束位置的全局视图来预测实体。除了设计了两个模块（Token 表征和 Span 预测）来识别实体外，还引入了一种新的损失函数来解决标签不均衡问题，另外还引入了一种简单有效的近似方法减少参数。实验表明 GP 胜过现有方案，此外损失函数也表现出有效性。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Feeling" scheme="https://www.yam.gift/categories/Feeling/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="NER" scheme="https://www.yam.gift/tags/NER/"/>
    
      <category term="Span" scheme="https://www.yam.gift/tags/Span/"/>
    
      <category term="GP" scheme="https://www.yam.gift/tags/GP/"/>
    
      <category term="Global Pointer" scheme="https://www.yam.gift/tags/Global-Pointer/"/>
    
      <category term="Class Imbalance Loss" scheme="https://www.yam.gift/tags/Class-Imbalance-Loss/"/>
    
  </entry>
  
  <entry>
    <title>DeepGen：Diverse Search Ad Generation and Real-Time Customization</title>
    <link href="https://www.yam.gift/2022/10/15/Paper/2022-10-15-DeepGen/"/>
    <id>https://www.yam.gift/2022/10/15/Paper/2022-10-15-DeepGen/</id>
    <published>2022-10-15T15:00:00.000Z</published>
    <updated>2022-10-16T12:19:36.803Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Paper：&lt;a href=&quot;https://arxiv.org/abs/2208.03438&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[2208.03438] DeepGen: Diverse Search Ad Generation and Real-Time Customization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Code：无&lt;/p&gt;
&lt;p&gt;一句话概述：端到端广告文本生成方案。&lt;/p&gt;
&lt;p&gt;摘要：DeepGen 是一个 Web 部署的用于为 Bing 广告客户自动生成搜索广告的系统。它使用最新的 NLG 模型从广告商的网页生成流畅的广告，并解决一些实际问题（真实性、推理速度）。系统会根据用户的搜索查询实时创建定制化广告，从而根据用户「正在寻找的内容」突出显示同一产品的不同方面。为了实现此目标，系统提前生成各种可选择的小广告片段素材，查询时选择最相关的拼接到完整广告中。通过训练可控 NLG 模型为同一网页生成多个广告，突出不同卖点，从而提高生成的多样性。更进一步，通过首先运行使用不同目标训练的生成模型集合，然后使用多样性采样算法选择不同生成结果子集进行在线选择，进一步横向提升了多样性。实验结果验证了系统设计的有效性，目前已部署生产环境，提供了必应投放的大约 4% 的全球广告。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Feeling" scheme="https://www.yam.gift/categories/Feeling/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="NLG" scheme="https://www.yam.gift/tags/NLG/"/>
    
      <category term="DeepGen" scheme="https://www.yam.gift/tags/DeepGen/"/>
    
  </entry>
  
  <entry>
    <title>只如初见的不只爱情</title>
    <link href="https://www.yam.gift/2022/09/11/Diary/2022-09-11-Passion/"/>
    <id>https://www.yam.gift/2022/09/11/Diary/2022-09-11-Passion/</id>
    <published>2022-09-11T15:00:00.000Z</published>
    <updated>2022-09-11T15:51:39.779Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;很久没有静心写一些文字了，回顾近大半年，感觉好像每天都在忙，时刻都有未做完的任务，时间就这样一点点慢慢流逝，安静的让人毫无知觉。&lt;/p&gt;
&lt;p&gt;今天是 2022 年中秋假的第二天，第一天睡了大半天，第二天浑浑噩噩待了近一个白天，大脑完全不想动，只想着到处刷刷，随便刷什么。这不是在打发时间，只是一种大脑潜意识或有意识地在「放纵」，提不起精气神干任何该干的事。躺着刷手机到下午 6 点多，突然觉得应该下楼走走，于是一边遛狗，一边慢慢开始自己与自己的对话。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Thinking" scheme="https://www.yam.gift/categories/Thinking/"/>
    
    
      <category term="Diary" scheme="https://www.yam.gift/tags/Diary/"/>
    
      <category term="Passion" scheme="https://www.yam.gift/tags/Passion/"/>
    
      <category term="Life" scheme="https://www.yam.gift/tags/Life/"/>
    
      <category term="Growth" scheme="https://www.yam.gift/tags/Growth/"/>
    
  </entry>
  
  <entry>
    <title>FLAN：Fine-tuned Language Models are Zero-Shot Learners</title>
    <link href="https://www.yam.gift/2022/08/28/Paper/2022-08-28-FLAN/"/>
    <id>https://www.yam.gift/2022/08/28/Paper/2022-08-28-FLAN/</id>
    <published>2022-08-28T15:00:00.000Z</published>
    <updated>2022-08-28T09:47:47.474Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Paper：&lt;a href=&quot;https://arxiv.org/abs/2109.01652&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[2109.01652] Finetuned Language Models Are Zero-Shot Learners&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Code：&lt;a href=&quot;https://github.com/google-research/flan&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/google-research/flan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一句话概述：指示微调赋予 MTL Zero-Shot 能力。&lt;/p&gt;
&lt;p&gt;摘要：本文探索了一种简单的方法来提升语言模型的 Zero-Shot 能力——指示（或指令）微调（instruction tuning），在一组通过指示描述的数据集上对语言模型微调，大大提高了在未见过任务上的 Zero-Shot 能力。模型 137B，在超过 60 个使用描述模板描述的数据集上微调。FLAN 在 20/25 个任务上超过了 175B 的 GPT3，Few-Shot 能力也大部分超过了 GPT3。消融实结果发现，微调的数据集数量、模型规模、指示，这三个因素是指示微调的关键。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Feeling" scheme="https://www.yam.gift/categories/Feeling/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="NLG" scheme="https://www.yam.gift/tags/NLG/"/>
    
      <category term="Prompt" scheme="https://www.yam.gift/tags/Prompt/"/>
    
      <category term="MTL" scheme="https://www.yam.gift/tags/MTL/"/>
    
      <category term="FLAN" scheme="https://www.yam.gift/tags/FLAN/"/>
    
      <category term="Zero-Shot" scheme="https://www.yam.gift/tags/Zero-Shot/"/>
    
  </entry>
  
  <entry>
    <title>W2NER 代码</title>
    <link href="https://www.yam.gift/2022/07/17/Paper/2022-07-17-W2NER-Code/"/>
    <id>https://www.yam.gift/2022/07/17/Paper/2022-07-17-W2NER-Code/</id>
    <published>2022-07-17T15:00:00.000Z</published>
    <updated>2022-07-17T14:23:23.236Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文主要讲述 W2NER 的代码，关于论文相关部分可阅读：&lt;a href=&quot;https://yam.gift/2022/06/11/Paper/2022-06-11-W2NER/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;统一NER为词词关系分类 | Yam&lt;/a&gt;。代码主要包括：输入、训练输出和解码部分，对于模型部分可参考前面的链接。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Coding" scheme="https://www.yam.gift/categories/Coding/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="NER" scheme="https://www.yam.gift/tags/NER/"/>
    
      <category term="W2NER" scheme="https://www.yam.gift/tags/W2NER/"/>
    
      <category term="NNW" scheme="https://www.yam.gift/tags/NNW/"/>
    
      <category term="THW" scheme="https://www.yam.gift/tags/THW/"/>
    
  </entry>
  
  <entry>
    <title>跨视角大脑解码</title>
    <link href="https://www.yam.gift/2022/07/02/Paper/2022-07-02-Cross-view-Brain-Decoding/"/>
    <id>https://www.yam.gift/2022/07/02/Paper/2022-07-02-Cross-view-Brain-Decoding/</id>
    <published>2022-07-02T15:00:00.000Z</published>
    <updated>2022-07-03T03:51:53.580Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Paper：&lt;a href=&quot;https://arxiv.org/abs/2204.09564&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[2204.09564] Cross-view Brain Decoding&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一句话概述：跨视角的 Zero-Shot 推理和翻译是可行的。&lt;/p&gt;
&lt;p&gt;摘要：大脑如何跨多个视角捕获语义仍然是个谜团，之前的都是单视角：如（1）带目标词标签的图片（WP）；（2）使用目标词的句子（S）；（3）包含带目标词的词云（WC）以及其他语义相关的词。本文提出跨视图翻译任务，如：图像字幕（IC）、图像标签（IT）、关键字提取（KE）和句子形成（SF），在此基础上研究大脑解码。通过实验证明了跨视角 Zero-Shot 是实用的，pairwise acc 大约为 68%。此外，解码后的表征在翻译任务上的 acc 表现也不错：IC（78%）、IT（83%）、KE（83.7 %）、SF（74.5%）。得出关于大脑的认知结论：（1）高比例的视觉像素参与 IC 和 IT 任务，高比例的语言像素参与 SF 和 KE 任务；（2）在 S 视角上训练并在 WC 视角上测试的 Zero-Shot 精度优于在 WC 视角上训练和测试。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文 view 均描述为「视角」，其实类似于一种形式或模式；translation 描述为「翻译任务」，其实是从一种 view 到另一种，在本文是不同的刺激到文本。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Feeling" scheme="https://www.yam.gift/categories/Feeling/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="Cross-view" scheme="https://www.yam.gift/tags/Cross-view/"/>
    
      <category term="Brain" scheme="https://www.yam.gift/tags/Brain/"/>
    
      <category term="Brain Decoding" scheme="https://www.yam.gift/tags/Brain-Decoding/"/>
    
      <category term="Zero-Short" scheme="https://www.yam.gift/tags/Zero-Short/"/>
    
  </entry>
  
  <entry>
    <title>统一NER为词词关系分类</title>
    <link href="https://www.yam.gift/2022/06/11/Paper/2022-06-11-W2NER/"/>
    <id>https://www.yam.gift/2022/06/11/Paper/2022-06-11-W2NER/</id>
    <published>2022-06-11T15:00:00.000Z</published>
    <updated>2022-07-17T10:04:59.987Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Paper：&lt;a href=&quot;https://arxiv.org/abs/2112.10070&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[2112.10070] Unified Named Entity Recognition as Word-Word Relation Classification&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一句话概述：基于词-词关系分类、可同时解决平铺、重叠和不连续 NER 的统一框架。&lt;/p&gt;
&lt;p&gt;摘要：NER 任务主要有三种类型：Flat（平铺）、overlapped（重叠或嵌套）、discontinuous（不连续），越来越多的研究致力于将它们统一起来。当前的 STOA 主要包括基于 Span 和 Seq2Seq 模型，不过它们很少关注边界，可能会导致后续的偏移。本文提出的统一方法（W2NER）是将其视为词词关系分类，为此引入两种词词关系：&lt;code&gt;NNW&lt;/code&gt;（&lt;code&gt;Next-Neighboring-Word&lt;/code&gt;）和 &lt;code&gt;THW-*&lt;/code&gt;（&lt;code&gt;Tail-Head-Word-*&lt;/code&gt;）。具体而言，构造一个 2D 的词词关系网格，然后使用多粒度 2D 卷积，以更好地细化网格表示。最后，使用一个共同预测器来推理词-词关系。效果自然是最新的 STOA。&lt;/p&gt;
&lt;p&gt;关于本文代码部分，可参考：&lt;a href=&quot;https://yam.gift/2022/07/17/Paper/2022-07-17-W2NER-Code/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;W2NER 代码&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Feeling" scheme="https://www.yam.gift/categories/Feeling/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="NER" scheme="https://www.yam.gift/tags/NER/"/>
    
      <category term="W2NER" scheme="https://www.yam.gift/tags/W2NER/"/>
    
      <category term="NNW" scheme="https://www.yam.gift/tags/NNW/"/>
    
      <category term="THW" scheme="https://www.yam.gift/tags/THW/"/>
    
      <category term="Span" scheme="https://www.yam.gift/tags/Span/"/>
    
      <category term="BIO" scheme="https://www.yam.gift/tags/BIO/"/>
    
      <category term="BIOHD" scheme="https://www.yam.gift/tags/BIOHD/"/>
    
  </entry>
  
  <entry>
    <title>预训练模型与传统方法在排序上有啥不同？</title>
    <link href="https://www.yam.gift/2022/04/23/Paper/2022-04-23-Pretrained-for-Rank/"/>
    <id>https://www.yam.gift/2022/04/23/Paper/2022-04-23-Pretrained-for-Rank/</id>
    <published>2022-04-23T15:00:00.000Z</published>
    <updated>2022-04-23T08:52:09.951Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Paper：&lt;a href=&quot;https://arxiv.org/abs/2204.07233&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[2204.07233] How Different are Pre-trained Transformers for Text Ranking?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一句话概述：BM25 粗排+CE 精排，你值得拥有。&lt;/p&gt;
&lt;p&gt;摘要：近年来与传统的检索模型和反馈方法相比，大规模预训练的效果有了显著提高。不过这些结果主要是基于 &lt;a href=&quot;https://github.com/microsoft/MSMARCO-Passage-Ranking&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MS Macro/ TREC&lt;/a&gt; 设置，非常特殊，我们对模型为什么好的理解是分散的。本文在文档检索任务上分析了 BERT 的交叉编码器与传统的 BM25 ，研究两个问题：第一，它们的相似之处在哪里？深度学习方法在多大程度上包含了 BM25 的能力，性能的提升是否由于相同文档的排名更高。第二，它们的不同之处是什么？深度学习方法能否检索 BM25 漏掉的文档。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Feeling" scheme="https://www.yam.gift/categories/Feeling/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="Pretrain" scheme="https://www.yam.gift/tags/Pretrain/"/>
    
      <category term="CE BERT" scheme="https://www.yam.gift/tags/CE-BERT/"/>
    
      <category term="BM25" scheme="https://www.yam.gift/tags/BM25/"/>
    
      <category term="Rank" scheme="https://www.yam.gift/tags/Rank/"/>
    
  </entry>
  
  <entry>
    <title>MarkBERT</title>
    <link href="https://www.yam.gift/2022/04/23/Paper/2022-04-23-MarkBERT/"/>
    <id>https://www.yam.gift/2022/04/23/Paper/2022-04-23-MarkBERT/</id>
    <published>2022-04-23T15:00:00.000Z</published>
    <updated>2022-04-23T10:30:17.535Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Paper：&lt;a href=&quot;https://arxiv.org/abs/2203.06378&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[2203.06378] MarkBERT: Marking Word Boundaries Improves Chinese BERT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一句话概述：在 Token 中加入你感兴趣的词的边界标记。&lt;/p&gt;
&lt;p&gt;摘要：MarkBERT 不是基于词的 BERT，依然是基于字，但巧妙地将「词的边界标记」信息融入模型。这样可以统一处理任意词，无论是不是 OOV。另外，MarkBERT 还有两个额外的好处：首先，在边界标记上添加单词级别的学习目标很方便，这是对传统字符和句子级预训练任务的补充；其次，可以通过用 POS 标签特定的标记替换通用标记来轻松合并更丰富的语义。在 NER 任务上取得了 2 个点的提升，在文本分类、关键词识别、语义相似任务上也取得了更好的精度。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Feeling" scheme="https://www.yam.gift/categories/Feeling/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="BERT" scheme="https://www.yam.gift/tags/BERT/"/>
    
      <category term="NER" scheme="https://www.yam.gift/tags/NER/"/>
    
      <category term="MarkBERT" scheme="https://www.yam.gift/tags/MarkBERT/"/>
    
      <category term="RWD" scheme="https://www.yam.gift/tags/RWD/"/>
    
  </entry>
  
  <entry>
    <title>量化NLM模型的记忆力</title>
    <link href="https://www.yam.gift/2022/04/15/Paper/2022-04-15-Quantifying-Memorization-NLM/"/>
    <id>https://www.yam.gift/2022/04/15/Paper/2022-04-15-Quantifying-Memorization-NLM/</id>
    <published>2022-04-15T15:00:00.000Z</published>
    <updated>2022-04-16T12:05:51.682Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Paper：&lt;a href=&quot;https://arxiv.org/abs/2202.07646&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[2202.07646] Quantifying Memorization Across Neural Language Models&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一句话概述：更大的模型更可能学到重复数据的特性，去重是缓解模型记忆危害的不错策略。&lt;/p&gt;
&lt;p&gt;摘要：语言模型能够记住一些训练数据，如果经过合适地提示引导，可能会生成记住的数据。这肯定不太合适，因为可能会侵犯隐私、降低效用（重复的容易记住的词往往质量比较低），并且有失公平（有些文本被记住而有些没有）。本文描述了三个对数线性关系，量化了 LM 生成记忆数据的程度。记忆会显著增加，如果增大：（1）模型的容量，（2）样本的重复次数，（3）提示文的 Token 数量。总的来说，LM 的记忆比之前认识到的更普遍，并随着模型不断增大可能变得更糟。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Feeling" scheme="https://www.yam.gift/categories/Feeling/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="PLM" scheme="https://www.yam.gift/tags/PLM/"/>
    
      <category term="NLM" scheme="https://www.yam.gift/tags/NLM/"/>
    
  </entry>
  
  <entry>
    <title>NLP预训练模型的不可能三角</title>
    <link href="https://www.yam.gift/2022/04/15/Paper/2022-04-15-Impossible-Triangle/"/>
    <id>https://www.yam.gift/2022/04/15/Paper/2022-04-15-Impossible-Triangle/</id>
    <published>2022-04-15T03:00:00.000Z</published>
    <updated>2022-04-16T03:09:16.665Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Paper：&lt;a href=&quot;https://arxiv.org/abs/2204.06130&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[2204.06130] Impossible Triangle: What’s Next for Pre-trained Language Models?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一句话概述：提出 NLP 模型的不可能三角并基于此提出未来的研究方向。&lt;/p&gt;
&lt;p&gt;摘要：本文主要描述了 PLM 的不可能三角：中等模型大小（1B以下），SOTA few-shot 能力，SOTA 微调能力。目前所有的 PLM 都缺其中一个或多个。很多注入知识蒸馏、数据增强、Prompt 的方法用以缓解这些缺失，但却在实际中带来了新的工作量。本文提供了一个未来的研究方向，将任务分解成几个关键阶段来实现不可能三角。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Feeling" scheme="https://www.yam.gift/categories/Feeling/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="Impossible-Triangle" scheme="https://www.yam.gift/tags/Impossible-Triangle/"/>
    
      <category term="PLM" scheme="https://www.yam.gift/tags/PLM/"/>
    
  </entry>
  
  <entry>
    <title>Training Data is More Valuable than You Think</title>
    <link href="https://www.yam.gift/2022/04/05/Paper/2022-04-05-Retrieving-From-Training-Data/"/>
    <id>https://www.yam.gift/2022/04/05/Paper/2022-04-05-Retrieving-From-Training-Data/</id>
    <published>2022-04-05T15:00:00.000Z</published>
    <updated>2022-04-16T06:11:53.778Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;论文：&lt;a href=&quot;https://arxiv.org/abs/2203.08773&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[2203.08773] Training Data is More Valuable than You Think: A Simple and Effective Method by Retrieving from Training Data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Code：&lt;a href=&quot;https://github.com/microsoft/REINA&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;microsoft/REINA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一句话概述：在检索任务中训练数据在推理时也大有用处。&lt;/p&gt;
&lt;p&gt;摘要：从大规模数据中检索通常比较耗时，仅从训练数据中也能有巨大收益。具体做法是检索与输入文本最相似的训练样例，拼接后作为输入喂入模型，然后生成结果。结果在摘要、翻译、语言模型和QA上都取得了不错的效果。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Feeling" scheme="https://www.yam.gift/categories/Feeling/"/>
    
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="Summarization" scheme="https://www.yam.gift/tags/Summarization/"/>
    
      <category term="Retrieving" scheme="https://www.yam.gift/tags/Retrieving/"/>
    
      <category term="QA" scheme="https://www.yam.gift/tags/QA/"/>
    
  </entry>
  
  <entry>
    <title>句子表征综述</title>
    <link href="https://www.yam.gift/2022/03/27/NLP/2022-03-27-Sentence-Representation-Summarization/"/>
    <id>https://www.yam.gift/2022/03/27/NLP/2022-03-27-Sentence-Representation-Summarization/</id>
    <published>2022-03-27T15:30:00.000Z</published>
    <updated>2022-04-05T02:09:10.490Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;早上收到从 Google Scholar 推送的宗成庆老师团队 2019 年的一篇 Paper：《Towards Sentence-Level Brain Decoding with Distributed Representations》，看这个题目觉得挺有趣就翻开读了读。这篇 Paper 研究的核心是：从大脑激活的模式解码整个句子，即构建解码器，通过分布式表示将大脑活动与句子刺激联系起来。并比较了句子表示与高级认知功能相关的不同大脑区域的对应关系，发现&lt;strong&gt;有监督的结构化表示模型最准确地探索了人类大脑的语言图谱&lt;/strong&gt;。句子的表征 NLPer 们应该都很熟悉，那大脑的激活又是怎么弄呢？作者使用了 Nature 的一篇论文《Toward a universal decoder of linguistic meaning from brain activation》【1】中的研究成果，这篇论文主要研究从图像数据中解码语言（单词和句子）意义，结果表明，解码表示甚至可以区分语义相似的句子，并捕捉到句子之间意义关系的相似结构。这就是说，我们在看到不同的单词和句子时，大脑内部显示出不同的状态，这种状态甚至在很相似的句子之间也表现的不同。关于项目的详细情况可以查阅【2】（我没细看 :D）。&lt;/p&gt;
&lt;p&gt;宗老师这篇 Paper 正好涉及到两个我个人比较感兴趣的点：认知科学和句子表征，关于这两个方面，我之前的几篇小文都涉及过，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://yam.gift/2018/07/22/NLP/2018-07-22-NLP-and-AI/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;NLP 与 AI | Yam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://yam.gift/2017/09/07/NLP/2017-09-07-Language-AI-Emotion/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;语言、AI、情感 | Yam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://yam.gift/2020/12/12/NLP/2020-12-12-NLP-Representation-History-Future/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;NLP 表征的历史与未来 | Yam&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;抛开认知部分不谈，句子表征也是一个很有意思的方向，因为相比「词」，「句子」才是基本的『语义单位』。恰巧这篇 Paper 中也提到了不少句子表征的方法，正好一起来个梳理，顺便表达一点自己的脑洞。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Thinking" scheme="https://www.yam.gift/categories/Thinking/"/>
    
    
      <category term="AI" scheme="https://www.yam.gift/tags/AI/"/>
    
      <category term="NLP" scheme="https://www.yam.gift/tags/NLP/"/>
    
      <category term="Sentence Representation" scheme="https://www.yam.gift/tags/Sentence-Representation/"/>
    
  </entry>
  
</feed>
